Liskov Substitution Principle (LSP)


This is a scary term for a very simple concept. It's formally defined as "If S is a subtype of T,
then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T)
without altering any of the desirable properties of that program (correctness, task performed, etc.)."
That's an even scarier definition.

The best explanation for this is if you have a parent class and a child class, then the base class and child class can be
used interchangeably without getting incorrect results. This might still be confusing, so let's take a look at the
classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the "is-a"
relationship via inheritance, you quickly get into trouble.

Bad:

class Rectangle
{
    protected double Width = 0;
    protected double Height = 0;

    public Drawable Render(double area)
    {
        // ...
    }

    public void SetWidth(double width)
    {
        Width = width;
    }

    public void SetHeight(double height)
    {
        Height = height;
    }

    public double GetArea()
    {
        return Width * Height;
    }
}

class Square : Rectangle
{
    public double SetWidth(double width)
    {
        Width = Height = width;
    }

    public double SetHeight(double height)
    {
        Width = Height = height;
    }
}

Drawable RenderLargeRectangles(Rectangle rectangles)
{
    foreach (rectangle in rectangles)
    {
        rectangle.SetWidth(4);
        rectangle.SetHeight(5);
        var area = rectangle.GetArea(); // BAD: Will return 25 for Square. Should be 20.
        rectangle.Render(area);
    }
}

var rectangles = new[] { new Rectangle(), new Rectangle(), new Square() };
RenderLargeRectangles(rectangles);


<MY NOTE>

In summary "Children class never should violate parent class type definition".
This occur when Square perform calculate in your SetWidth and SetHeight methods.
The GetArea from parent class return mistake result.

ShapeBase class was created and Rectangle and Square implements it.
The responsibility to change fields are the children.


Good:

CODE IN MODEL